DB

Proc


uspAddAddress proc.:
CREATE PROCEDURE dbo.uspAddAddress
    @pLogin NVARCHAR(50), 
    @pAddress1 NVARCHAR(120),
    @pAddress2 NVARCHAR(120),
    @pAddress3 NVARCHAR(120),
    @pPLZ INT,
    @pCity_name nvarchar(50),
    @pState_name nvarchar(20),
    @pCountry nvarchar(20),
    @responseMessage NVARCHAR(250) OUTPUT
AS
BEGIN
    BEGIN TRY

        INSERT INTO dbo.user_address (login_name, address_1, address_2, address_3, PLZ, city_name, state_name, Country)
        VALUES(@pLogin, @pAddress1, @pAddress2, @pAddress3, @pPLZ, @pCity_name, @pState_name, @pCountry)

       SET @responseMessage='Success'

    END TRY
    BEGIN CATCH
        SET @responseMessage=ERROR_MESSAGE() 
    END CATCH

END



uspAddCategories proc:
CREATE PROCEDURE dbo.uspAddCategories
    @pCategorie NVARCHAR(50), 
    @pDescription NVARCHAR(50),
    @pParentID int
AS 
BEGIN
    insert into categories (cat_name, cat_des, par_id) values(@pCategorie, @pDescription, @pParentID);
END;



uspAddUser proc:
CREATE PROCEDURE dbo.uspAddUser
    @pLogin NVARCHAR(50), 
    @pPassword NVARCHAR(50),
    @pEmail NVARCHAR(50),
    @responseMessage NVARCHAR(250) OUTPUT
AS
BEGIN
    SET NOCOUNT ON

    DECLARE @salt UNIQUEIDENTIFIER=NEWID()
    BEGIN TRY

        INSERT INTO dbo.users (login_name, password_hash, salt, email)
        VALUES(@pLogin, HASHBYTES('SHA2_512', @pPassword+CAST(@salt AS NVARCHAR(36))), @salt, @pEmail)

       SET @responseMessage='Success'

    END TRY
    BEGIN CATCH
        SET @responseMessage=ERROR_MESSAGE() 
    END CATCH

END





uspLogin proc:
CREATE PROCEDURE dbo.uspLogin
    @pLoginName NVARCHAR(254),
    @pPassword NVARCHAR(50),
    @responseMessage NVARCHAR(250)='' OUTPUT
AS
BEGIN

    SET NOCOUNT ON

    DECLARE @userID INT

    IF EXISTS (SELECT TOP 1 user_id FROM dbo.users WHERE login_name=@pLoginName)
    BEGIN
        SET @userID=(SELECT user_id FROM dbo.users WHERE login_name=@pLoginName AND password_Hash=HASHBYTES('SHA2_512', @pPassword+CAST(Salt AS NVARCHAR(36))))

       IF(@userID IS NULL)
           SET @responseMessage='Incorrect password'
       ELSE 
           SET @responseMessage='User successfully logged in'
    END
    ELSE
       SET @responseMessage='Invalid login'

END



uspUserInfo proc:
CREATE PROCEDURE dbo.uspUserInfo
    @pLogin NVARCHAR(50), 
    @pPassword NVARCHAR(50)

AS    
BEGIN
    select first_name, last_name, users.login_name, email , admin_rights, profile_pic_url, address_1, address_2, address_3, city_name, state_name, Country, PLZ 
    from dbo.users LEFT JOIN  dbo.user_address 
    on users.login_name = user_address.login_name
    where users.login_name= @pLogin and users.password_hash = HASHBYTES('SHA2_512', @pPassword+CAST(salt AS NVARCHAR(36)));
END